<?xml version="1.0" encoding="UTF-8"?>
<!-- 从高到地低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->
<!-- 属性描述 scan：性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
    debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <property name="LOG_PATH" value="${LOG_PATH:-.}"/>
    <!--    需要使用<springProperty>,才可使用application.properties（或application.yml）中的值-->
    <springProperty scope="context" name="logDestination" source="log.destination"/>
    <springProperty scope="context" name="logLevel" source="log.level"/>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS,GMT+8}\t[%X{requestId}] [%thread] %-5level %logger{80}\t%msg%n</pattern>
        </encoder>
    </appender>

    <appender name="FILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/all.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/all.%d{yyyy-MM-dd,GMT+8}.log
            </fileNamePattern>
            <!-- 最多 60 个文件 -->
            <maxHistory>2</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS,GMT+8} \t [%X{requestId}] [%thread] %-5level %logger{80}-\t%msg%n</pattern>
            <charset class="java.nio.charset.Charset">UTF-8</charset>
        </encoder>
    </appender>


    <!-- 日志输出规则  根据当前ROOT 级别，日志输出时，级别高于root默认的级别时  会输出 -->
    <root level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE" />
    </root>
    <!-- 开发、测试环境 -->
    <!--<springProfile name="dev">-->
        <!--<logger name="org.springframework.web" level="INFO"/>-->
        <!--<logger name="org.springboot.sample" level="INFO" />-->
        <!--<logger name="com.baomidou.mybatisplus" level="DEBUG" />-->
    <!--</springProfile>-->
</configuration>